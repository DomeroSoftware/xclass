# Neural_Bin.Training

return {
    layers => [3, 24, 12, 6, 1],
    map => {
        'XOR'       => 0,
        'AND'       => 1,
        'NXOR'      => 2,
        'NAND'      => 3,
        'OR'        => 4,
        'NOR'       => 5,
        'IMPLY'     => 6,
        'NIMPLY'    => 7,
        'XNOR'      => 8,
        'NOT'       => 9
    },
    data => [
        # XOR (Exclusive OR)
        ['XOR', [0, 0], [0]],
        ['XOR', [0, 1], [1]],
        ['XOR', [1, 0], [1]],
        ['XOR', [1, 1], [0]],

        # AND
        ['AND', [0, 0], [0]],
        ['AND', [0, 1], [0]],
        ['AND', [1, 0], [0]],
        ['AND', [1, 1], [1]],

        # NXOR (NOT XOR)
        ['NXOR', [0, 0], [1]],
        ['NXOR', [0, 1], [0]],
        ['NXOR', [1, 0], [0]],
        ['NXOR', [1, 1], [1]],

        # NAND (NOT AND)
        ['NAND', [0, 0], [1]],
        ['NAND', [0, 1], [1]],
        ['NAND', [1, 0], [1]],
        ['NAND', [1, 1], [0]],

        # OR
        ['OR', [0, 0], [0]],
        ['OR', [0, 1], [1]],
        ['OR', [1, 0], [1]],
        ['OR', [1, 1], [1]],

        # NOR (NOT OR)
        ['NOR', [0, 0], [1]],
        ['NOR', [0, 1], [0]],
        ['NOR', [1, 0], [0]],
        ['NOR', [1, 1], [0]],

        # IMPLY (Logical implication)
        ['IMPLY', [0, 0], [1]],
        ['IMPLY', [0, 1], [1]],
        ['IMPLY', [1, 0], [0]],
        ['IMPLY', [1, 1], [1]],

        # NIMPLY (NOT IMPLY)
        ['NIMPLY', [0, 0], [0]],
        ['NIMPLY', [0, 1], [0]],
        ['NIMPLY', [1, 0], [1]],
        ['NIMPLY', [1, 1], [0]],

        # NOT (for completeness, though it's unary)
        ['NOT', [0, 0], [1]],
        ['NOT', [1, 1], [0]],

    ]
}
